#!/usr/bin/env bash

set -Eeuo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=lib/main.bash
source "$plugin_dir/lib/main.bash"

logdebug "Entered script '$0'."

# ------------------------------------------------------------------------------

download_release() {
    local version="$1"
    local filename="$2"

    local platform
    platform=$(uname | awk '{print tolower($0)}')

    local arch
    uname_arch=$(uname -m)
    if [ "x86_64" = "$uname_arch" ]; then
        arch="x86_64"
    elif [ "arm64" = "$uname_arch" ]; then
        arch="arm64"
    else
        logexit "Unknown architecture."
    fi

    local url="$gh_repo/releases/download/v$version/${tool_name}_v${version}_${platform}_${arch}.tar.gz"

    logdebug "version=$version"
    logdebug "filename=$filename"
    logdebug "platform=$platform"
    logdebug "arch=$arch"
    logdebug "url=$url"

    curl "${curl_opts[@]}" -o "$filename" "$url" || logexit "Failed to download '$url'."
    logsuccess "Downloaded binary from '$url'."
}

# ------------------------------------------------------------------------------

install_version="$ASDF_INSTALL_VERSION" && logdebug "install_version=$install_version"
download_path="$ASDF_DOWNLOAD_PATH" && logdebug "download_path=$download_path"

mkdir -p "$download_path"

release_file="$download_path/$tool_name-$install_version.tar.gz"

download_release "$install_version" "$release_file"

tar -xzf "$release_file" -C "$download_path" || logexit "Could not extract '$release_file'."
logsuccess "Unpacked archive '$release_file' at '$download_path'."

if ! [ -f "$download_path/$tool_name" ]; then
    logexit "File '$download_path/$tool_name' expected, but does not exist."
fi

rm "$release_file"
